{"version":3,"sources":["images/logo.svg","components/Header/Header.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","reactLogo","alt","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wJAAe,G,KAAA,IAA0B,kC,OCY1BA,EATA,WACX,OACI,wBAAQC,UAAU,SAAlB,SACI,qBAAKA,UAAU,eAAeC,IAAKC,EAAWC,IAAI,iFCmP/CC,MApPf,WACE,OAEE,8BACI,qBAAKJ,UAAY,OAAjB,SACI,cAAC,EAAD,SCEGK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,8BACE,cAAC,EAAD,QAGDC,SAASC,eAAe,SAM7Bb,K","file":"static/js/main.49c67884.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.a307e1c4.svg\";","import React from 'react';\r\nimport reactLogo from '../../images/logo.svg';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className=\"header\">\r\n            <img className=\"header__logo\" src={reactLogo} alt=\"Логотип место\"/>\r\n        </header>\r\n    )\r\n\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nimport Header from '../Header/Header'\r\n// import './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n\r\n    <div>\r\n        <div className = \"page\">\r\n            <Header />\r\n        </div> \r\n    </div>\r\n    // <div className=\"App\">\r\n    //   <header className=\"App-header\">\r\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n    //     <p>\r\n    //       Edit <code>src/App.js</code> and save to reload.\r\n    //       {/* Отредактируйте App.js и сохраните файл, чтобы \r\n    //       страница перезагрузилась. */}\r\n    //     </p>\r\n    //     <a\r\n    //       className=\"App-link\"\r\n    //       href=\"https://reactjs.org\"\r\n    //       target=\"_blank\"\r\n    //       rel=\"noopener noreferrer\"\r\n    //     >\r\n    //       Learn React\r\n    //       {/* Узнать больше о «Реакте» */}\r\n    //     </a>\r\n    //   </header>\r\n    // </div>\r\n  );\r\n}\r\n\r\n\r\n// import { useEffect, useState } from 'react';\r\n\r\n// import Header from './Header';\r\n// import Main from './Main';\r\n// import Footer from './Footer';\r\n// import ImagePopup from './ImagePopup';\r\n// import PopupWithForm from './PopupWithForm';\r\n// import api from '../../utils/api'\r\n// import EditProfilePopup from './EditProfilePopup'\r\n// import EditAvatarPopup from './EditAvatarPopup'\r\n// import AddPlacePopup from './AddPlacePopup'\r\n\r\n// // Импортируем объект контекста\r\n// import { CurrentUserContext } from '../contexts/CurrentUserContext';\r\n\r\n\r\n// function App() {\r\n\r\n//   const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false)\r\n//   const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false)\r\n//   const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false)\r\n//   const [isPhotoPopupOpen, setIsPhotoPopupOpen] = React.useState(false)\r\n//   const [selectedCard, setSelectedCard] = React.useState({})\r\n\r\n//   const [cards, setCards] = React.useState([])\r\n\r\n\r\n  \r\n//   const [currentUser, setCurrentUser] = React.useState({\r\n//     name: '', \r\n//     about: ''\r\n//   })\r\n\r\n\r\n//   const handleRequest = () => {\r\n//       api.getUserInfo()\r\n//         .then(res => {\r\n//             setCurrentUser(res)\r\n//           })\r\n//         .catch((err) => {console.log(err)});  \r\n\r\n//     }\r\n    \r\n//   useEffect(() => {\r\n//       handleRequest()\r\n//   }, []);\r\n\r\n//   function handleCardLike(card) {\r\n//     const isLiked = card.likes.some(i => i._id === currentUser._id);  \r\n//     api.changeLikeCardStatus(card._id, !isLiked)\r\n//     .then((newCard) => {\r\n//       const newCards = cards.map((c) => c._id === card._id ? newCard : c);\r\n//       setCards(newCards);\r\n//     })\r\n//     .catch((err)=>{\r\n//       console.log(`Ошибка при загрузке данных пользователя: ${err}`)\r\n//     })\r\n//   }\r\n  \r\n//   function handleCardDelete(card) {\r\n//     api.deleteCard(card._id).then(() => {\r\n//       const newCards = cards.filter((c) => c._id !== card._id);\r\n//       setCards(newCards);\r\n//     })\r\n//     .catch((err)=>{\r\n//       console.log(`Ошибка при создании новой карточки: ${err}`)\r\n//     })\r\n//   }\r\n\r\n\r\n\r\n//   function handleCardClick(card) {\r\n//     setIsPhotoPopupOpen(true)\r\n//     setSelectedCard(card);\r\n//   }\r\n\r\n//   function handleEditProfileClick() {    \r\n//       setIsEditProfilePopupOpen(true)    \r\n//   }\r\n  \r\n\r\n//   function handleAddPlaceClick() {\r\n//     setIsAddPlacePopupOpen(true)\r\n//   }\r\n\r\n//   function handleEditAvatarClick(){\r\n//     setIsEditAvatarPopupOpen(true)\r\n//   };\r\n\r\n//   function closeAllPopups() {\r\n//     setIsEditProfilePopupOpen(false)\r\n//     setIsAddPlacePopupOpen(false)\r\n//     setIsEditAvatarPopupOpen(false)\r\n//     setIsPhotoPopupOpen(false)\r\n    \r\n//   }\r\n\r\n\r\n//   function handleUpdateUser(data) {\r\n//     console.log('handleUpdateUser',data)\r\n//     api.editProfile(data)\r\n//     .then((response) => {\r\n//       console.log('handleUpdateUser response',response)\r\n//       setCurrentUser(response)\r\n//       closeAllPopups()\r\n//     })\r\n//     .catch((err)=>{\r\n//       console.log(`Ошибка при загрузке данных пользователя: ${err}`)\r\n//     })\r\n//   }\r\n\r\n//   function handleUpdateAvatar(link) {\r\n//     api.addAvatar(link)\r\n//       .then((response) => {\r\n//         setCurrentUser(response)\r\n//         closeAllPopups()\r\n//       })\r\n//       .catch((err)=>{\r\n//         console.log(`Ошибка при загрузке данных пользователя: ${err}`)\r\n//       })\r\n//   }\r\n\r\n\r\n// function handleUpdateCard(data) {\r\n//   api.addCard(data)\r\n//     .then((card) => {\r\n//       setCards([card, ...cards])\r\n//       closeAllPopups()\r\n//     })\r\n//     .catch((err)=>{\r\n//       console.log(`Ошибка при загрузке данных пользователя: ${err}`)\r\n//     })\r\n// }\r\n\r\n// const handleCardsRequest = () => {\r\n//   api.getCards()\r\n//     .then(res => {\r\n//         setCards(res);\r\n//     })\r\n//     .catch((err) => {console.log(err)});                \r\n// }\r\n\r\n// useEffect(() => {\r\n//   handleCardsRequest() \r\n// }, []);\r\n\r\n\r\n//   return (\r\n//     <CurrentUserContext.Provider value={currentUser}>\r\n//       {\r\n      \r\n//         <div>\r\n\r\n\r\n//           <div className=\"page\"> \r\n\r\n//             <Header />\r\n//             <Main\r\n//               onEditProfile = {handleEditProfileClick} \r\n//               onAddPlace = {handleAddPlaceClick} \r\n//               onEditAvatar = {handleEditAvatarClick} \r\n//               onCardClick = {handleCardClick}\r\n//               cards = {cards}\r\n//               onCardLike = {handleCardLike}\r\n//               onCardDelete = {handleCardDelete}\r\n//             />\r\n\r\n//             <Footer />      \r\n\r\n//           </div>\r\n\r\n//             <EditProfilePopup \r\n//               isOpen = {isEditProfilePopupOpen} \r\n//               onClose = {closeAllPopups}\r\n//               onUpdateUser = {handleUpdateUser}\r\n//             /> \r\n\r\n//             <AddPlacePopup\r\n//               isOpen = {isAddPlacePopupOpen}\r\n//               onClose = {closeAllPopups}\r\n//               onUpdateCard = {handleUpdateCard}              \r\n//             />\r\n\r\n//             <PopupWithForm\r\n//               sectionName = 'confirmation'\r\n//               children = {\r\n//                 <form className=\"modal__form\" id=\"confirmation\" action=\"#\" noValidate>\r\n//                   <h2 className=\"modal__title-confirmation\">Вы уверены?</h2>\r\n//                   <button type=\"submit\" className=\"modal__btn-save-confirmation\">Да</button>\r\n//                 </form>               \r\n//               }\r\n//               isOpen = {false}\r\n//             />\r\n            \r\n//             <EditAvatarPopup \r\n//               isOpen={isEditAvatarPopupOpen} \r\n//               onClose={closeAllPopups} \r\n//               onUpdateAvatar = {handleUpdateAvatar}\r\n//             />\r\n            \r\n//             <ImagePopup \r\n//               card = {selectedCard}\r\n//               isOpen = {isPhotoPopupOpen}\r\n//               handleClick = {closeAllPopups}       \r\n//             />\r\n\r\n//         </div>\r\n\r\n//       }\r\n//     </CurrentUserContext.Provider>\r\n//   )\r\n// }\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render((\n  <React.StrictMode>\n    <div>\n      <App />\n    </div>\n  </React.StrictMode>\n  ), document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}